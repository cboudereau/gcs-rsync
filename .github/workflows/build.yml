name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: 
      - '*'

env:
  CARGO_TERM_COLOR: always

  EXAMPLE_BUCKET: gcs-rsync-dev
  EXAMPLE_PREFIX: example-ci

  TEST_BUCKET: gcs-rsync-dev
  TEST_PREFIX: integration-test-ci
  TEST_SERVICE_ACCOUNT: service_account.json
  GOOGLE_APPLICATION_CREDENTIALS: default_token.json

jobs:
  lint: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: fmt
        run: cargo fmt --all -- --check
      - name: clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build
        run: cargo build --verbose
      - name: unit tests
        run: cargo test --lib --verbose

  check:
    name: code coverage (unit + integration tests)
    env:
      GOOGLE_APPLICATION_CREDENTIALS_TOKEN: ${{ secrets.TEST_GOOGLE_APPLICATION_CREDENTIALS_TOKEN }} 
      TEST_SERVICE_ACCOUNT_TOKEN: ${{ secrets.TEST_SERVICE_ACCOUNT_TOKEN }} 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup test default token
        run: 'echo "$GOOGLE_APPLICATION_CREDENTIALS_TOKEN" > default_token.json'

      - name: Setup test service_account token
        run: 'echo "$TEST_SERVICE_ACCOUNT_TOKEN" > service_account.json'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: '--exclude-files src/lib.rs -- --test-threads 1'

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml